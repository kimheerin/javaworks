package banking.array;

import java.util.Scanner;

public class BankMain2 {
	//계좌를 100개짜리 주머니(배열) 만들기
	static Account[] accounts = new Account[100];
	static Scanner scan = new Scanner(System.in);	//입력을 위한
	
	
	public static void main(String[] args) {
		boolean sw = true;
		
		
		while(sw) {
			System.out.println("================================================");
			System.out.println("1. 계좌 생성 | 2. 계좌 목록 | 3. 예금 | 4. 출금 | 5. 종료");
			System.out.println("================================================");
			System.out.print("선택 >>>>> ");
		
			//메뉴 선택
			int selecNo = Integer.parseInt(scan.nextLine()); 	//그냥 scan.nextLine 쓰면 오류남
			
			if(selecNo == 1) {
				creatAccount();			//계좌 생성
			}else if(selecNo == 2) {
				getAccountList();		//계좌 목록
			}else if(selecNo == 3) {
				deposit();				//예금
			}else if(selecNo == 4) {
				withdraw();			//출금
			}else if(selecNo == 5) {
				sw = false;				//종료
			}else {
				System.out.println("지원하지 않는 기능입니다. 다시 입력해 주세요.");
			}
		}//while
		System.out.println("프로그램을 종료합니다.");
		scan.close();
	}//main
	
	//계좌 생성 함수
	private static void creatAccount() {
		System.out.println("------------------------------------------------");
		System.out.println("\t\t계좌 생성 시작");
		System.out.println("------------------------------------------------");
	
		while(true)
			System.out.print("계좌번호 : ");
			String ano = scan.nextLine();
			//중복 계좌가 있는지 확인
			if(findAccount(ano) != null) {	//중복 계좌가 있으면
				System.out.println("중복 계좌입니다. 다시 입력해 주세요.");
			}else {	//중복 계좌가 없으면
			System.out.print("예금주 : ");
			String owner = scan.nextLine();
			
			System.out.print("초기 입금액 : ");
			int balance = Integer.parseInt(scan.nextLine());
			
			//accounts[0] = new Account(ano, owner, balance); 	//연습 데이터 1개 생성
			for(int i=0; i<accounts.length; i++) {
				if(accounts[i] == null) {	//배열의 요소가 비어 있을 때 계좌를 저장함
					accounts[i] = new Account(ano, owner, balance);
					System.out.println("계좌가 생성되었습니다.");
					break;			
				}  
			}
			break; //while까지 빠져나와야 함
			}
		}//while
	//계좌 목록 함수
	private static void getAccountList() {
		System.out.println("------------------------------------------------");
		System.out.println("\t\t계좌 목록 조회");
		System.out.println("------------------------------------------------");
		
		for(int i=0; i<accounts.length; i++) {
			if(accounts[i] != null) {
				System.out.print("계좌 번호 : " + accounts[i].getAno() + "\t");
				System.out.print("예금주 : " + accounts[i].getowner() + "\t");
				System.out.println("잔고 : " + accounts[i].getbalance() + "\t");
			}
		}

	}
	//입금 함수
	private static void deposit() {
		System.out.println("------------------------------------------------");
		System.out.print("\t\t   입    금\n");
		System.out.println("------------------------------------------------");
		
		System.out.print("계좌 번호 : ");
		String ano = scan.nextLine();
		
		System.out.print("입금액 : ");
		int money = Integer.parseInt(scan.nextLine());
		
		if(findAccount(ano) != null) {							//찾으면
			Account account = findAccount(ano);					//???★
			account.setbalance(account.getbalance() + money); 	//???★
			System.out.println("정상적으로 입금되었습니다!");
		}else {
			System.out.println("계좌가 존재하지 않습니다.");
		}
		Account account = findAccount(ano);
		/*while() {
			int balance = Integer.parseInt(scan.nextLine());
			balance += balance;
		//System.out.println("입금된 금액 : " + Integer.parseInt(scan.nextLine()));
		}*/
		
	}
	//출금 함수
	private static void withdraw() {
		System.out.println("------------------------------------------------");
		System.out.print("\t\t   출    금\n");
		System.out.println("------------------------------------------------");
		
		System.out.print("계좌 번호 : ");
		String ano = scan.nextLine();		
	 				
		System.out.print("출금액 : ");
		int money = Integer.parseInt(scan.nextLine());
	
		if(findAccount(ano) != null) {							//null이 아닐 때
			Account account = findAccount(ano);					//???★
			account.setbalance(account.getbalance() - money); 	//???★

			System.out.println("정상적으로 출금되었습니다!");
					
		}else{
			System.out.println("계좌가 존재하지 않습니다.");
		}
		Account account = findAccount(ano);
	}	
	//계좌 검색 함수
	private static Account findAccount(String ano) {
		Account account = null;						 //찾을 계좌를 저장할 바구니(변수)
		
		for(int i=0; i<accounts.length; i++) {
			if(accounts[i] != null) {				 //입력하면 채워지니까 null이 아님
				String dbAno = accounts[i].getAno(); //생성돼 있는 계좌 번호 가져옴(비교 위해)
				if(dbAno.equals(ano)) {				 //저장돼 있는 거 vs 외부에서 입력한 거 비교
					account = accounts[i];			 //일치하는 결과를 저장 ?★
					break;
				}
			}	
		}
		return account;
	}
}
